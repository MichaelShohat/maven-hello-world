# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and a multi-stage docker build

on:
  workflow_dispatch: 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with: 
        fetch-depth: 0
        
    - name: Get Latest Tag
      id: previoustag
      uses: WyriHaximus/github-action-get-previous-tag@v1
      
    - name: Print latest tag
      run: echo  ${{ steps.previoustag.outputs.tag }}

    - name: 'Get next versions formats'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
        
#    - name: Print next versions formats, all of them (major, minor, patch) and with v in the beginning
#      run: echo '${{ toJSON(steps.semvers.outputs) }}'

    - name: Set next patch version
      run: echo "next_patch_version=${{ steps.semvers.outputs.patch }}" >> "$GITHUB_ENV"
      
    - name: Print next patch version
      run: echo "$next_patch_version"

    - name: Replace the version in pom.xml
      run: |
        sed -i "0,/<version>.*<\/version>/s/<version>.*<\/version>/<version>${next_patch_version}<\/version>/" pom.xml
      working-directory: myapp

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: my-docker-hub-namespace/my-docker-hub-repository

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and export to Docker
      uses: docker/build-push-action@v6
      with:
        load: true
        push: true
        file: myapp/Dockerfile
        context: myapp/
        tags: "${{ secrets.DOCKER_USERNAME }}/myapp:${{  env.next_patch_version  }}","${{ secrets.DOCKER_USERNAME }}/myapp:latest"
        labels: ${{ steps.meta.outputs.labels }}
        
        
      
    - name: Test docker image and the target folder to upload as an artifact
      run: |
        docker run --name myapp --pull always "${{ secrets.DOCKER_USERNAME }}/myapp:${{  env.next_patch_version  }}"
        docker cp myapp:/myapp/target ./myapp

    - name: Upload artifact - src code
      uses:
        actions/upload-artifact@v4
      with: 
        name: src folder
        path: | 
          myapp/src

    - name: Upload artifact - target
      uses:
        actions/upload-artifact@v4
      with:
        name: target folder
        path: |
          myapp/target

    - name: Push the updated pom.xml
      run: |
        git config --local user.name "Actions Run"
        git config --local user.email "michaelsho9@gmail.com"
        git add myapp/pom.xml
        git commit -m "Updated the app version in pom.xml [skip ci]"
        git tag ${next_patch_version}
        git push
        git push --tags
